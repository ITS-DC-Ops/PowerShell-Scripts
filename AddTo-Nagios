#Usage: ./AddTo-Nagios <hostname>
$computerName = $args[0]

#If DNSLookup fails, we can exit on $DNSLookup
Try {$DNSLookup = [Net.DNS]::GetHostEntry("$computerName")}
   Catch [System.Management.Automation.MethodInvocationException] {
    $ErrorMessage = $_.Exception.Message
    $FailedItem = $_.Exception.ItemName
    Return $ErrorMessage
}

Catch {

    $ErrorMessage = $_.Exception.Message
    $FailedItem = $_.Exception.ItemName
    Return $ErrorMessage
}

if($DNSLookup) {

  $DNSLookup = [Net.DNS]::GetHostEntry($computerName)
  $hostname = $DNSLookup.HostName
  $address = $DNSLookup.AddressList.IPAddressToString
  $check_command = 'check_command\check_ping\!3000,80%\!5000,100%'
  $max_check_attempts = '2'
  $contacts = 'nagiosadmin'
  $notification_interval = '5'
  $notification_period= '24x7'
  $applyconfig= '1'
  $check_period= '24x7'
  $Uri = 'https://<nagioshost>/nagiosxi/api/v1/config/host?apikey=l9dtails9n08nns4daf7rndrjup8paicgv9pfrlljjqa9mbjuppne6g2499qgr60&pretty=1'
  $postParams = @{
                  host_name='$hostname'
                  address='$address'
                  check_command = '$check_command'
                  max_check_attempts = '$max_check_attempts'
                  contacts = '$contacts'
                  notification_interval = '$notification_interval'
                  notification_period = '$notification_period'
                  applyconfig = '$applyconfig'
                  check_period = '$check_period'
}

 

 

$response = (Invoke-WebRequest -Uri $Uri  -Method 'POST' -Body $postParams).ToString()
write-Host $response

}

else {
  Write-Host "HostName not found"
}
